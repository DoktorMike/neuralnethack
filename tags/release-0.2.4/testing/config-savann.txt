% This is the input file for the neuralnethack program
% 
% Everything after a % sign and until a end-of-line character
% is treated as a comment.
%
% The format is like
% {Identifier}	{Value} {Value} ....
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%>>>>>>>>>>> Logging options <<<<<<<<<<<
LogFileLevel	Normal			% Normal,Debug,Screen,All,Nolog
ScreenLevel		Screen			% Screen,Normal,Debug,Silent

%>>>>>>>>>>> Project Identification <<<<<<<<<<<
ProjectID		Test problem	% Project identifier
ResultDir		./result		% result directory, default=./result
Suffix			001				% Suffix for the produced files, default=001

%>>>>>>>>>>> Datafiles	<<<<<<<<<<<
FileName    ./TrnTstData/trn-n0-k0.dat	% File path 
InCol		1-15								% E.g. 1,5-6
OutCol		16									% E.g. 1-3,5
RowRange	0									% E.g. 1-100 or 0 for all rows

%>>>>>>>>>>> Optional test datafile <<<<<<<<<<<
FileNameT   ./TrnTstData/tst-n0-k0.dat	% File path 
InColT		1-15								% E.g. 1,5-6
OutColT		16									% E.g. 1-3,5
RowRangeT	0							% E.g. 1-100 or 0 for all rows

%>>>>>>>>>>> Problem Type <<<<<<<<<<<
PType		class						% class or regr

%>>>>>>>>>>> The size of the network <<<<<<<<<<<
NLay		3
Size		15 3 1

%>>>>>>>>>>> Activation functions <<<<<<<<<<<
ActFcn		tansig logsig		% tansig, logsig, purelin or softmax

%>>>>>>>>>>> Error function <<<<<<<<<<<
ErrFcn		kullback				% sumsqr or kullback

%>>>>>>>>>>> Minimization method <<<<<<<<<<<
MinMethod	qn					% gd, cg, qn or lm
MaxEpochs	3000				% Maximum number of epochs, when needed 

%>>>>>>>>>>> Gradient descent parameters <<<<<<<<<<<
GDParam		915 0.2 0.99 0.8	% batchsize, learningrate, decrease of lr, momentum.
				
%>>>>>>>>>>> Sampling parameters when training <<<<<<<<<<<
SampPar			0 0.5 ser

% arg 1: Toggle assymetric sampling on/off 
% arg 2: Size of asymmetric sampling [0,1]
% arg 3: Data selection mode, rnd or ser

%>>>>>>>>>>> Regularization <<<<<<<<<<<
WeightElim		0 0.8 1.0				% Toggle on/off, alpha parameter and W_o
OBD				0 0.5					% Toggle OBD on/off + parameter
OBS				0 0.5					% Toggle OBS on/off + parameter

%>>>>>>>>>>> Ensemble definitions <<<<<<<<<<<<<
EnsParam		cs 1 1 rnd 0

% arg 1: Data selection method. cs, bagg.
% arg 2: Number of independent runs.
% arg 3: If arg1 = cs: The number of parts.
% arg 4: Split mode, rnd or ser
% arg 5: Should we use different weights (toggle)

%>>>>>>>>>>> Model selection <<<<<<<<<<<
MSParam			boot 3 2 rnd 0.2

% arg 1: Data selection method. cv, boot.
% arg 2: Number of independent runs.
% arg 3: The number of parts if arg1 = cv. 
% arg 4: Split mode, rnd or ser
% arg 5: Number of trainingdata if arg2=1, fraction or number

%>>>>>>>>>>> Cross testing to estimate generalization performance <<<<<<<<<
MSGParam		0 1 rnd 0.33

% arg 1: Number of independent cross validations. (if 0, no cross testing)
% arg 2: Number of subsets for cross testing 
% arg 3: Split mode, rnd or ser
% arg 4: < 1 = splitratio, > 1 = # of rows or row-range. This is only for arg2=1

%>>>>>>>>>>> Misc <<<<<<<<<<<
SaveSession	0					% Save all networks in the training-session
Info	2						% 0,1,2 0=Silent, 1=Some info, 2 = A lot
SaveOutputList	1				% Save model output for each data point
Seed	0						% Which seed to use. 0 for cpu clock

%>>>>>>>>>>> Input/Output data normalization <<<<<<<<<<<
InDataNorm	uv		% zo,mo,const,uv,cuv or no
InNormConst	10.0	% Rescaling constant if "const" above
OutDataNorm	no		% max,uv,const or no
OutNormConst	10.0	% Rescaling constant if "const" above

